patch:
  switches/@0/reset: ~

  engine/processors/@last: express_editor

  punctuator:
    full_shape:
      ' ': { commit: '　' }
      '<': '，'
      '>': '。'
      '?': '？'
      ':': '：'
      "'": '、'
      '"': '；'
      '\': [ '／', '＼' ]
      '|': [ '｜', '¶', '§' ]
      '~': '～'
      '!': '！'
      '@': [ '＠', '☯' ]
      '#': [ '＃', '⌘' ]
      '%': [ '％', '°', '℃' ]
      '$': [ '＄', '￥', '€', '£', '¥', '¢', '¤' ]
      '^': '……'
      '&': '＆'
      '*': [ '＊', '・', '×', '※', '❂' ]
      '(': '（'
      ')': '）'
      '_': [ '—', '——' ]
      '+': '＋'
      '=': '＝'
      '[': [ '「', '《', '【', '〔', '［' ]
      ']': [ '」', '》', '】', '〕', '］' ]
      '{': [ '『', '〈', '〖', '｛' ]
      '}': [ '』', '〉', '〗', '｝' ]
    half_shape:
      '<': '，'
      '>': '。'
      '?': '？'
      ':': '：'
      "'": '、'
      '"': '；'
      '\': [ '/', '／', '\', '＼' ]
      '|': [ '|', '｜', '¶', '§' ]
      '`': { commit: '`' }
      '~': [ '~', '～' ]
      '!': '！'
      '@': { commit: '@' }
      '#': { commit: '#' }
      '%': [ '%', '％', '°', '℃' ]
      '$': [ '$', '¥', '€', '£', '¢', '¤' ]
      '^': [ '^', '…', '……' ]
      '&': '&'
      '*': [ '*', '＊', '・', '×', '※', '❂' ]
      '(': [ '(', '（' ]
      ')': [ ')', '）' ]
      '_': [ '_', '—', '——' ]
      '+': '+'
      '=': '='
      '[': [ '「', '《', '【', '〔', '［' ]
      ']': [ '」', '》', '】', '〕', '］' ]
      '{': [ '『','〈', '〖', '｛' ]
      '}': [ '』','〉', '〗', '｝' ]
    symbols:
      '`': [ '`' ]

  ascii_composer/switch_key/Shift_L: noop
  ascii_composer/switch_key/Shift_R: noop

  # Override `[` and `]` behaviors.
  key_binder:
    bindings:
      - { when: has_menu, accept: comma,  send: comma }   # ㄝ
      - { when: has_menu, accept: period, send: period }  # ㄡ
      - { when: has_menu, accept: minus,  send: minus }   # ㄦ

      - { when: has_menu, accept: Shift+BackSpace, send: BackSpace }
      - { when: has_menu, accept: BackSpace,       send: Control+BackSpace }

      - { when: has_menu, accept: Left,  send: Page_Up }
      - { when: has_menu, accept: Right, send: Page_Down }

      - { when: always, accept: Shift_L, send_sequence: '{F4}{2}' }
      - { when: always, accept: Shift_R, send_sequence: '{F4}{2}' }
